AWSTemplateFormatVersion: 2010-09-09
Parameters:
    CPU:
        Description: Allocated cpu for the ecs service
        Type: String
        AllowedValues:
            - "256"
            - "512"
            - "1024"
    Memory:
        Description: Allocated memory for the ecs service
        Type: String
        AllowedValues:
            - "512"
            - "1024"
            - "2048"
    UnsplashAccessKey:
        Description: Unsplash api key used to fetch the images
        Type: String
Resources:
    CloudMap:
        Properties:
            Description: Service Map for project valstock
            Name: valstock.local
            Vpc: vpc-0b6132ecfe0d4e51d
        Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Cluster:
        Properties:
            ClusterName: valstock
            Tags:
                - Key: com.project
                  Value: valstock
        Type: AWS::ECS::Cluster
    Default80Ingress:
        Properties:
            CidrIp: 0.0.0.0/0
            Description: web:80/tcp on default network
            FromPort: 80
            GroupId:
                Ref: DefaultNetwork
            IpProtocol: TCP
            ToPort: 80
        Type: AWS::EC2::SecurityGroupIngress
    DefaultNetwork:
        Properties:
            GroupDescription: valstock Security Group for default network
            Tags:
                - Key: com.project
                  Value: valstock
                - Key: com.project.network
                  Value: valstock_default
            VpcId: vpc-0b6132ecfe0d4e51d
        Type: AWS::EC2::SecurityGroup
    DefaultNetworkIngress:
        Properties:
            Description: Allow communication within network default
            GroupId:
                Ref: DefaultNetwork
            IpProtocol: "-1"
            SourceSecurityGroupId:
                Ref: DefaultNetwork
        Type: AWS::EC2::SecurityGroupIngress
    LoadBalancer:
        Properties:
            Scheme: internet-facing
            SecurityGroups:
                - Ref: DefaultNetwork
            Subnets:
                - subnet-019e0c69521087957
                - subnet-0d38e6a4c9ef4ed66
                - subnet-017deb7d7b47d29e4
            Tags:
                - Key: com.project
                  Value: valstock
            Type: application
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    LogGroup:
        Properties:
            LogGroupName: /valstock
        Type: AWS::Logs::LogGroup
    WebService:
        DependsOn:
            - WebTCPListener
        Properties:
            Cluster:
                Fn::GetAtt:
                    - Cluster
                    - Arn
            DeploymentConfiguration:
                MaximumPercent: 200
                MinimumHealthyPercent: 100
            DeploymentController:
                Type: ECS
            DesiredCount: 1
            LaunchType: FARGATE
            LoadBalancers:
                - ContainerName: web
                  ContainerPort: 3000
                  TargetGroupArn:
                      Ref: WebTCPTargetGroup
            NetworkConfiguration:
                AwsvpcConfiguration:
                    AssignPublicIp: ENABLED
                    SecurityGroups:
                        - Ref: DefaultNetwork
                    Subnets:
                        - subnet-019e0c69521087957
                        - subnet-0d38e6a4c9ef4ed66
                        - subnet-017deb7d7b47d29e4
            PlatformVersion: 1.3.0
            PropagateTags: SERVICE
            SchedulingStrategy: REPLICA
            ServiceRegistries:
                - RegistryArn:
                      Fn::GetAtt:
                          - WebServiceDiscoveryEntry
                          - Arn
            Tags:
                - Key: com.project
                  Value: valstock
                - Key: com.project.service
                  Value: web
            TaskDefinition:
                Ref: WebTaskDefinition
        Type: AWS::ECS::Service
    WebServiceDiscoveryEntry:
        Properties:
            Description: '"web" service discovery entry in Cloud Map'
            DnsConfig:
                DnsRecords:
                    - TTL: 60
                      Type: A
                RoutingPolicy: MULTIVALUE
            HealthCheckCustomConfig:
                FailureThreshold: 1
            Name: web
            NamespaceId:
                Ref: CloudMap
        Type: AWS::ServiceDiscovery::Service
    WebTCPListener:
        Properties:
            DefaultActions:
                - ForwardConfig:
                      TargetGroups:
                          - TargetGroupArn:
                                Ref: WebTCPTargetGroup
                  Type: forward
            LoadBalancerArn:
                Ref: LoadBalancer
            Port: 80
            Protocol: HTTP
        Type: AWS::ElasticLoadBalancingV2::Listener
    WebTCPTargetGroup:
        Properties:
            Port: 3000
            Protocol: HTTP
            Tags:
                - Key: com.project
                  Value: valstock
            TargetType: ip
            VpcId: vpc-0b6132ecfe0d4e51d
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
    WebTaskDefinition:
        Properties:
            ContainerDefinitions:
                - Command:
                      - eu-west-3.compute.internal
                      - valstock.local
                  Essential: false
                  Image: docker/ecs-searchdomain-sidecar:1.0
                  LogConfiguration:
                      LogDriver: awslogs
                      Options:
                          awslogs-group:
                              Ref: LogGroup
                          awslogs-region:
                              Ref: AWS::Region
                          awslogs-stream-prefix: valstock
                  Name: Web_ResolvConf_InitContainer
                - Command:
                      - node
                      - server.js
                  DependsOn:
                      - Condition: SUCCESS
                        ContainerName: Web_ResolvConf_InitContainer
                  Environment:
                      - Name: NEXT_PUBLIC_UNSPLASH_ACCESS_KEY
                        Value: !Ref UnsplashAccessKey
                  Essential: true
                  Image: 188985040416.dkr.ecr.eu-west-3.amazonaws.com/valstock:latest
                  LinuxParameters: {}
                  LogConfiguration:
                      LogDriver: awslogs
                      Options:
                          awslogs-group:
                              Ref: LogGroup
                          awslogs-region:
                              Ref: AWS::Region
                          awslogs-stream-prefix: valstock
                  Name: web
                  PortMappings:
                      - ContainerPort: 3000
                        HostPort: 3000
                        Protocol: tcp
            Cpu: !Ref CPU
            ExecutionRoleArn:
                Ref: WebTaskExecutionRole
            Family: valstock-web
            Memory: !Ref Memory
            NetworkMode: awsvpc
            RequiresCompatibilities:
                - FARGATE
        Type: AWS::ECS::TaskDefinition
    WebTaskExecutionRole:
        Properties:
            AssumeRolePolicyDocument:
                Statement:
                    - Action:
                          - sts:AssumeRole
                      Condition: {}
                      Effect: Allow
                      Principal:
                          Service: ecs-tasks.amazonaws.com
                Version: 2012-10-17
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
                - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
            Tags:
                - Key: com.project
                  Value: valstock
                - Key: com.project.service
                  Value: web
        Type: AWS::IAM::Role
    IAMPolicy:
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyDocument: !Sub |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ssm:GetParameters",
                                "secretsmanager:GetSecretValue",
                                "kms:Decrypt"
                            ],
                            "Resource": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Cluster}/*"
                        }
                    ]
                }
            Roles:
                - !Ref WebTaskExecutionRole
            PolicyName: "${WebTaskExecutionRole}ParameterStoreReadAccess"
    SSMParameter:
        Type: "AWS::SSM::Parameter"
        Properties:
            Name: !Sub "/${Cluster}/NEXT_PUBLIC_UNSPLASH_ACCESS_KEY"
            Type: String
            Value: !Ref UnsplashAccessKey
            DataType: text
            Tier: Standard
